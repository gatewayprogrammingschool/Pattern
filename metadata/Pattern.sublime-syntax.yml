%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html
name: Pattern
file_extensions:
  - pat
first_line_match: "Pattern File"
scope: source.pattern
variables:
  number_number: (?<integer>[0-9]+)
  number_hex: (?<hexvalue>(?<token>(?:0[xX]+)|[$])(?<value>(?(token)[a-fA-F0-9]+)))

  bool_op_equality: (?:==|Is)
  bool_op_logical_and: (?:&&|And)
  bool_op_logical_or: (?:\|\||Or)
  bool_op_logical_not: (?:!|Not)
  bool_op_xor: (?:\^|Xor)

  asgn_op_direct: (?:=|From)
  asgn_op_and: (?:&)
  asgn_op_or: (?:\|)

  math_op_addition: (?<addition>(?<leftvalue>[\d]+)(?:\s*)(?<operator>\+)(?:\s*)(?<rightvalue>[\d]+))
  math_op_subtraction: (?<subtraction>(?<leftvalue>[\d]+)(?:\s*)(?<operator>\-)(?:\s*)(?<rightvalue>[\d]+))
  math_op_multiplication: (?<multiplication>(?<leftvalue>[\d]+)(?:\s*)(?<operator>\*)(?:\s*)(?<rightvalue>[\d]+))
  math_op_division: (?<division>(?<leftvalue>[\d]+)(?:\s*)(?<operator>\\)(?:\s*)(?<rightvalue>[\d]+))
  math_op_remainder: (?<remainder>(?<leftvalue>[\d]+)(?:\s*)(?<operator>%)(?:\s*)(?<rightvalue>[\d]+))
  math_op_power: (?<power>(?<leftvalue>[\d]+)(?:\s*)(?<operator>\^)(?:\s*)(?<rightvalue>[\d]+))
  math_op_root: (?<root>(?<leftvalue>[\d]+)(?:\s*)(?<operator>\#)(?:\s*)(?<rightvalue>[\d]+))

  string_op_concatenation: ?(DEFINE)(?<quote>["])(?<notquote>[^"]*)(?<string>(?P>quote)(?P>notquote)(?P>quote)))(?<string1>(?P>string))(?<operator>(?:\s*\+\+\s*))(?<string2>(?P>string))
  string_op_remove_first: ?(DEFINE)(?<quote>["])(?<notquote>[^"]*)(?<string>(?P>quote)(?P>notquote)(?P>quote)))(?<string1>(?P>string))(?<operator>(?:\s*\+\+\s*))(?<string2>(?P>string))
  string_op_remove_first: ?(DEFINE)(?<quote>["])(?<notquote>[^"]*)(?<string>(?P>quote)(?P>notquote)(?P>quote)))(?<string1>(?P>string))(?<operator>(?:\s*\+\+\s*))(?<string2>(?P>string))
  string_op_remove_last: ?(DEFINE)(?<quote>["])(?<notquote>[^"]*)(?<string>(?P>quote)(?P>notquote)(?P>quote)))(?<string1>(?P>string))(?<operator>(?:\s*\+\+\s*))(?<string2>(?P>string))
  string_op_remove_set: ?(DEFINE)(?<quote>["])(?<notquote>[^"]*)(?<string>(?P>quote)(?P>notquote)(?P>quote)))(?<string1>(?P>string))(?<operator>(?:\s*\+\+\s*))(?<string2>(?P>string))
  string_op_replace_first: ?(DEFINE)(?<quote>["])(?<notquote>[^"]*)(?<string>(?P>quote)(?P>notquote)(?P>quote)))(?<string1>(?P>string))(?<operator>(?:\s*\+\+\s*))(?<string2>(?P>string))
  string_op_replace_last: ?(DEFINE)(?<quote>["])(?<notquote>[^"]*)(?<string>(?P>quote)(?P>notquote)(?P>quote)))(?<string1>(?P>string))(?<operator>(?:\s*\+\+\s*))(?<string2>(?P>string))
  string_op_replace_set: ?(DEFINE)(?<quote>["])(?<notquote>[^"]*)(?<string>(?P>quote)(?P>notquote)(?P>quote)))(?<string1>(?P>string))(?<operator>(?:\s*\+\+\s*))(?<string2>(?P>string))
  string_op_concatenation: ?(DEFINE)(?<quote>["])(?<notquote>[^"]*)(?<string>(?P>quote)(?P>notquote)(?P>quote)))(?<string1>(?P>string))(?<operator>(?:\s*\+\+\s*))(?<string2>(?P>string))
  string_op_concatenation: ?(DEFINE)(?<quote>["])(?<notquote>[^"]*)(?<string>(?P>quote)(?P>notquote)(?P>quote)))(?<string1>(?P>string))(?<operator>(?:\s*\+\+\s*))(?<string2>(?P>string))
  string_op_concatenation: ?(DEFINE)(?<quote>["])(?<notquote>[^"]*)(?<string>(?P>quote)(?P>notquote)(?P>quote)))(?<string1>(?P>string))(?<operator>(?:\s*\+\+\s*))(?<string2>(?P>string))
  string_op_concatenation: ?(DEFINE)(?<quote>["])(?<notquote>[^"]*)(?<string>(?P>quote)(?P>notquote)(?P>quote)))(?<string1>(?P>string))(?<operator>(?:\s*\+\+\s*))(?<string2>(?P>string))

  identifier: '\b[[:alpha:]_][[:alnum:]_]*\b'
  type_chars: '[[:alnum:]\s,._*&<>\[\]-]'

contexts:
  main:
    - include: global

  globals:
    - include: imports
    - include: functions
    - include: statements

  statements:
    - include: expressions-early
    - include: initializers
    - include: block
    - match: \b(Object)\s+({{identifier}})\s+(Of)\s+({{}})
