%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html
name: Pattern
file_extensions:
  - pat
first_line_match: "Pattern File"
scope: source.pattern
variables:
  number_number: (?<number>(?<wholenumber>\d+)(?<decimal>\.?)(?<fractionalnumber>\d*))
  number_hex: (?<hexvalue>(?<token>(?:0[xX]+)|[$])(?<value>(?(token)[a-fA-F0-9]+)))
  string: (?(DEFINE)(?<quote>["])(?<notquote>[^"]*)(?<string>(?P>quote)(?P>notquote)(?P>quote)))(?<string1>(?P>string))

  bool_op_equality: (?:==|Is)
  bool_op_logical_and: (?:&&|And)
  bool_op_logical_or: (?:\|\||Or)
  bool_op_logical_not: (?:!|Not)
  bool_op_xor: (?:\^|Xor)

  asgn_op_direct: (?:=|From)
  asgn_op_and: (?:&)
  asgn_op_or: (?:\|)

  math_op_addition: (?<addition>(?<leftvalue>[\d]+)(?:\s*)(?<operator>\+)(?:\s*)(?<rightvalue>[\d]+))
  math_op_subtraction: (?<subtraction>(?<leftvalue>[\d]+)(?:\s*)(?<operator>\-)(?:\s*)(?<rightvalue>[\d]+))
  math_op_multiplication: (?<multiplication>(?<leftvalue>[\d]+)(?:\s*)(?<operator>\*)(?:\s*)(?<rightvalue>[\d]+))
  math_op_division: (?<division>(?<leftvalue>[\d]+)(?:\s*)(?<operator>\\)(?:\s*)(?<rightvalue>[\d]+))
  math_op_remainder: (?<remainder>(?<leftvalue>[\d]+)(?:\s*)(?<operator>%)(?:\s*)(?<rightvalue>[\d]+))
  math_op_power: (?<power>(?<leftvalue>[\d]+)(?:\s*)(?<operator>\^)(?:\s*)(?<rightvalue>[\d]+))
  math_op_root: (?<root>(?<leftvalue>[\d]+)(?:\s*)(?<operator>\#)(?:\s*)(?<rightvalue>[\d]+))

  string_op_concatenation: (?<left>{{string}})(?<operator>(?:\s*\+\+\s*))(?<right>{{string}})
  string_op_remove_all: (?<left>{{string}})(?<operator>(?:\s*\-\-\s*))(?<right>{{string}})
  string_op_remove_first: (?<left>{{string}})(?<operator>(?:\s*\-\<\s*))(?<right>{{string}})
  string_op_remove_last: (?<left>{{string}})(?<operator>(?:\s*\-\>\s*))(?<right>{{string}})
  #string_op_remove_set: (?(DEFINE)(?<quote>["])(?<notquote>[^"]*)(?<string>(?P>quote)(?P>notquote)(?P>quote)))(?<string1>(?P>string))(?<operator>(?:\s*\+\+\s*))(?<string2>(?P>string))
  string_op_replace_all: (?<left>{{string}})(?<operator>(?:\s*\!\!\s*))(?<right>{{string}})
  string_op_replace_first: (?<left>{{string}})(?<operator>(?:\s*\!\<\s*))(?<right>{{string}})
  string_op_replace_last: (?<left>{{string}})(?<operator>(?:\s*\!\>\s*))(?<right>{{string}})
  #string_op_replace_set: (?(DEFINE)(?<quote>["])(?<notquote>[^"]*)(?<string>(?P>quote)(?P>notquote)(?P>quote)))(?<string1>(?P>string))(?<operator>(?:\s*\+\+\s*))(?<string2>(?P>string))
  string_op_substring: (?(DEFINE)(?<open>\()(?<close>\))(?<number>\d+)(?<operator>(?:\,)))(?<substring>(?P>open){2}(?<number1>(?P>number))(?P>operator)(?<number2>(?P>number))(?P>close){2})
  string_op_first_index_of: (?<left>{{string}})(?<operator>(?:\s*\<\<\s*))(?<right>{{string}})
  string_op_last_index_of: (?<left>{{string}})(?<operator>(?:\s*\>\>\s*))(?<right>{{string}})
  string_op_all_index_of: (?<left>{{string}})(?<operator>(?:\s*\>\<\s*))(?<right>{{string}})

  unicode_char: '(?:\\u\h{4}|\\U\h{8})'
  escaped_char: '(?:\\[abfnrtv"''\\]|{{unicode_char}}|\\x[0-9a-fA-F]{1,4}|\\[0-9]{1,3})'

  visibility: \b(?:public|private|visible)\b
  base_type: (?:Type|Reference|Node|Pair|Array|Bag|Flag|Number|Guid|Logical|Character|String|Date|Place|Culture|Enumeration|EnumNode)
  patterned_type: (?:Domain|Singleton|Facade|Model|View|Controller|Bridge|Adapter|DataStore|DataProvider|DataAdapter|DataBridge|ForeignMethod|Service|Application)
  type_suffix: ((?:\(,*\))*)

  brackets_capture: 

contexts:
  main:
    - include: global

  globals:
    - include: imports
    - include: functions
    - include: statements

  statements:
    - include: expressions-early
    - include: initializers
    - include: block
    - match: \b(Object)\s+({{identifier}})\s+(Of)\s+({{}})
